'Raster Master RPG demo for ABQ - Amiga QuickBasic

OPTION EXPLICIT
IMPORT AnimSupport

SCREEN 1, 320, 200, 4, 0, "RPG Demo"
WINDOW 1, "RPG Demo"

'important: initialize the animation system first
GELS INIT

'Raster Master Exported RES Text Include
DIM AS Integer _rmx,_rmy,_rmr,_rmg,_rmb,_rma,_rmi,_rmj
DIM Boyd1Pal_Size AS Integer = 48
DIM Boyd1Pal_Colors AS Integer = 16
DIM Boyd1Pal_Id AS Integer = 1
RESTORE Boyd1PalLabel
DIM Boyd1Pal!(48)
FOR _rmi=0 TO 47
    READ Boyd1Pal!(_rmi)
NEXT _rmi
DIM Boyd1_Size AS Integer = 256
DIM Boyd1_Width AS Integer = 16
DIM Boyd1_Height AS Integer = 16
DIM Boyd1_Colors AS Integer = 16
DIM Boyd1_Id AS Integer = 1
DIM Boyd1_Depth AS Integer = 4
RESTORE Boyd1Label
DIM AS BITMAP_t PTR Boyd1BitMap = NULL
DIM AS BOB_t PTR Boyd1Bob
Boyd1BitMap = BITMAP(Boyd1_Width,Boyd1_Height,Boyd1_Depth,TRUE)
BITMAP OUTPUT Boyd1BitMap
FOR _rmj=0 TO Boyd1_Height-1
    FOR _rmi=0 TO Boyd1_Width-1
        READ _rma
        Pset(_rmi,_rmj),_rma
    NEXT _rmi
NEXT _rmj
Boyd1Bob = BOB(Boyd1BitMap)
WINDOW OUTPUT 1
DIM Boyd2_Size AS Integer = 256
DIM Boyd2_Width AS Integer = 16
DIM Boyd2_Height AS Integer = 16
DIM Boyd2_Colors AS Integer = 16
DIM Boyd2_Id AS Integer = 2
DIM Boyd2_Depth AS Integer = 4
RESTORE Boyd2Label
DIM AS BITMAP_t PTR Boyd2BitMap = NULL
DIM AS BOB_t PTR Boyd2Bob
Boyd2BitMap = BITMAP(Boyd2_Width,Boyd2_Height,Boyd2_Depth,TRUE)
BITMAP OUTPUT Boyd2BitMap
FOR _rmj=0 TO Boyd2_Height-1
    FOR _rmi=0 TO Boyd2_Width-1
        READ _rma
        Pset(_rmi,_rmj),_rma
    NEXT _rmi
NEXT _rmj
Boyd2Bob = BOB(Boyd2BitMap)
WINDOW OUTPUT 1
DIM Boyd3_Size AS Integer = 256
DIM Boyd3_Width AS Integer = 16
DIM Boyd3_Height AS Integer = 16
DIM Boyd3_Colors AS Integer = 16
DIM Boyd3_Id AS Integer = 3
DIM Boyd3_Depth AS Integer = 4
RESTORE Boyd3Label
DIM AS BITMAP_t PTR Boyd3BitMap = NULL
DIM AS BOB_t PTR Boyd3Bob
Boyd3BitMap = BITMAP(Boyd3_Width,Boyd3_Height,Boyd3_Depth,TRUE)
BITMAP OUTPUT Boyd3BitMap
FOR _rmj=0 TO Boyd3_Height-1
    FOR _rmi=0 TO Boyd3_Width-1
        READ _rma
        Pset(_rmi,_rmj),_rma
    NEXT _rmi
NEXT _rmj
Boyd3Bob = BOB(Boyd3BitMap)
WINDOW OUTPUT 1
DIM BoyL1_Size AS Integer = 256
DIM BoyL1_Width AS Integer = 16
DIM BoyL1_Height AS Integer = 16
DIM BoyL1_Colors AS Integer = 16
DIM BoyL1_Id AS Integer = 4
DIM BoyL1_Depth AS Integer = 4
RESTORE BoyL1Label
DIM AS BITMAP_t PTR BoyL1BitMap = NULL
DIM AS BOB_t PTR BoyL1Bob
BoyL1BitMap = BITMAP(BoyL1_Width,BoyL1_Height,BoyL1_Depth,TRUE)
BITMAP OUTPUT BoyL1BitMap
FOR _rmj=0 TO BoyL1_Height-1
    FOR _rmi=0 TO BoyL1_Width-1
        READ _rma
        Pset(_rmi,_rmj),_rma
    NEXT _rmi
NEXT _rmj
BoyL1Bob = BOB(BoyL1BitMap)
WINDOW OUTPUT 1
DIM BoyL2_Size AS Integer = 256
DIM BoyL2_Width AS Integer = 16
DIM BoyL2_Height AS Integer = 16
DIM BoyL2_Colors AS Integer = 16
DIM BoyL2_Id AS Integer = 5
DIM BoyL2_Depth AS Integer = 4
RESTORE BoyL2Label
DIM AS BITMAP_t PTR BoyL2BitMap = NULL
DIM AS BOB_t PTR BoyL2Bob
BoyL2BitMap = BITMAP(BoyL2_Width,BoyL2_Height,BoyL2_Depth,TRUE)
BITMAP OUTPUT BoyL2BitMap
FOR _rmj=0 TO BoyL2_Height-1
    FOR _rmi=0 TO BoyL2_Width-1
        READ _rma
        Pset(_rmi,_rmj),_rma
    NEXT _rmi
NEXT _rmj
BoyL2Bob = BOB(BoyL2BitMap)
WINDOW OUTPUT 1
DIM BoyL3_Size AS Integer = 256
DIM BoyL3_Width AS Integer = 16
DIM BoyL3_Height AS Integer = 16
DIM BoyL3_Colors AS Integer = 16
DIM BoyL3_Id AS Integer = 6
DIM BoyL3_Depth AS Integer = 4
RESTORE BoyL3Label
DIM AS BITMAP_t PTR BoyL3BitMap = NULL
DIM AS BOB_t PTR BoyL3Bob
BoyL3BitMap = BITMAP(BoyL3_Width,BoyL3_Height,BoyL3_Depth,TRUE)
BITMAP OUTPUT BoyL3BitMap
FOR _rmj=0 TO BoyL3_Height-1
    FOR _rmi=0 TO BoyL3_Width-1
        READ _rma
        Pset(_rmi,_rmj),_rma
    NEXT _rmi
NEXT _rmj
BoyL3Bob = BOB(BoyL3BitMap)
WINDOW OUTPUT 1
DIM BoyR1_Size AS Integer = 256
DIM BoyR1_Width AS Integer = 16
DIM BoyR1_Height AS Integer = 16
DIM BoyR1_Colors AS Integer = 16
DIM BoyR1_Id AS Integer = 7
DIM BoyR1_Depth AS Integer = 4
RESTORE BoyR1Label
DIM AS BITMAP_t PTR BoyR1BitMap = NULL
DIM AS BOB_t PTR BoyR1Bob
BoyR1BitMap = BITMAP(BoyR1_Width,BoyR1_Height,BoyR1_Depth,TRUE)
BITMAP OUTPUT BoyR1BitMap
FOR _rmj=0 TO BoyR1_Height-1
    FOR _rmi=0 TO BoyR1_Width-1
        READ _rma
        Pset(_rmi,_rmj),_rma
    NEXT _rmi
NEXT _rmj
BoyR1Bob = BOB(BoyR1BitMap)
WINDOW OUTPUT 1
DIM BoyR2_Size AS Integer = 256
DIM BoyR2_Width AS Integer = 16
DIM BoyR2_Height AS Integer = 16
DIM BoyR2_Colors AS Integer = 16
DIM BoyR2_Id AS Integer = 8
DIM BoyR2_Depth AS Integer = 4
RESTORE BoyR2Label
DIM AS BITMAP_t PTR BoyR2BitMap = NULL
DIM AS BOB_t PTR BoyR2Bob
BoyR2BitMap = BITMAP(BoyR2_Width,BoyR2_Height,BoyR2_Depth,TRUE)
BITMAP OUTPUT BoyR2BitMap
FOR _rmj=0 TO BoyR2_Height-1
    FOR _rmi=0 TO BoyR2_Width-1
        READ _rma
        Pset(_rmi,_rmj),_rma
    NEXT _rmi
NEXT _rmj
BoyR2Bob = BOB(BoyR2BitMap)
WINDOW OUTPUT 1
DIM BoyR3_Size AS Integer = 256
DIM BoyR3_Width AS Integer = 16
DIM BoyR3_Height AS Integer = 16
DIM BoyR3_Colors AS Integer = 16
DIM BoyR3_Id AS Integer = 9
DIM BoyR3_Depth AS Integer = 4
RESTORE BoyR3Label
DIM AS BITMAP_t PTR BoyR3BitMap = NULL
DIM AS BOB_t PTR BoyR3Bob
BoyR3BitMap = BITMAP(BoyR3_Width,BoyR3_Height,BoyR3_Depth,TRUE)
BITMAP OUTPUT BoyR3BitMap
FOR _rmj=0 TO BoyR3_Height-1
    FOR _rmi=0 TO BoyR3_Width-1
        READ _rma
        Pset(_rmi,_rmj),_rma
    NEXT _rmi
NEXT _rmj
BoyR3Bob = BOB(BoyR3BitMap)
WINDOW OUTPUT 1
DIM BoyU1_Size AS Integer = 256
DIM BoyU1_Width AS Integer = 16
DIM BoyU1_Height AS Integer = 16
DIM BoyU1_Colors AS Integer = 16
DIM BoyU1_Id AS Integer = 10
DIM BoyU1_Depth AS Integer = 4
RESTORE BoyU1Label
DIM AS BITMAP_t PTR BoyU1BitMap = NULL
DIM AS BOB_t PTR BoyU1Bob
BoyU1BitMap = BITMAP(BoyU1_Width,BoyU1_Height,BoyU1_Depth,TRUE)
BITMAP OUTPUT BoyU1BitMap
FOR _rmj=0 TO BoyU1_Height-1
    FOR _rmi=0 TO BoyU1_Width-1
        READ _rma
        Pset(_rmi,_rmj),_rma
    NEXT _rmi
NEXT _rmj
BoyU1Bob = BOB(BoyU1BitMap)
WINDOW OUTPUT 1
DIM BoyU2_Size AS Integer = 256
DIM BoyU2_Width AS Integer = 16
DIM BoyU2_Height AS Integer = 16
DIM BoyU2_Colors AS Integer = 16
DIM BoyU2_Id AS Integer = 11
DIM BoyU2_Depth AS Integer = 4
RESTORE BoyU2Label
DIM AS BITMAP_t PTR BoyU2BitMap = NULL
DIM AS BOB_t PTR BoyU2Bob
BoyU2BitMap = BITMAP(BoyU2_Width,BoyU2_Height,BoyU2_Depth,TRUE)
BITMAP OUTPUT BoyU2BitMap
FOR _rmj=0 TO BoyU2_Height-1
    FOR _rmi=0 TO BoyU2_Width-1
        READ _rma
        Pset(_rmi,_rmj),_rma
    NEXT _rmi
NEXT _rmj
BoyU2Bob = BOB(BoyU2BitMap)
WINDOW OUTPUT 1
DIM BoyU3_Size AS Integer = 256
DIM BoyU3_Width AS Integer = 16
DIM BoyU3_Height AS Integer = 16
DIM BoyU3_Colors AS Integer = 16
DIM BoyU3_Id AS Integer = 12
DIM BoyU3_Depth AS Integer = 4
RESTORE BoyU3Label
DIM AS BITMAP_t PTR BoyU3BitMap = NULL
DIM AS BOB_t PTR BoyU3Bob
BoyU3BitMap = BITMAP(BoyU3_Width,BoyU3_Height,BoyU3_Depth,TRUE)
BITMAP OUTPUT BoyU3BitMap
FOR _rmj=0 TO BoyU3_Height-1
    FOR _rmi=0 TO BoyU3_Width-1
        READ _rma
        Pset(_rmi,_rmj),_rma
    NEXT _rmi
NEXT _rmj
BoyU3Bob = BOB(BoyU3BitMap)
WINDOW OUTPUT 1
DIM Bricks_Size AS Integer = 256
DIM Bricks_Width AS Integer = 16
DIM Bricks_Height AS Integer = 16
DIM Bricks_Colors AS Integer = 16
DIM Bricks_Id AS Integer = 13
DIM Bricks_Depth AS Integer = 4
RESTORE BricksLabel
DIM AS BITMAP_t PTR BricksBitMap = NULL
BricksBitMap = BITMAP(Bricks_Width,Bricks_Height,Bricks_Depth,TRUE)
BITMAP OUTPUT BricksBitMap
FOR _rmj=0 TO Bricks_Height-1
    FOR _rmi=0 TO Bricks_Width-1
        READ _rma
        Pset(_rmi,_rmj),_rma
    NEXT _rmi
NEXT _rmj
WINDOW OUTPUT 1
DIM Floor_Size AS Integer = 256
DIM Floor_Width AS Integer = 16
DIM Floor_Height AS Integer = 16
DIM Floor_Colors AS Integer = 16
DIM Floor_Id AS Integer = 14
DIM Floor_Depth AS Integer = 4
RESTORE FloorLabel
DIM AS BITMAP_t PTR FloorBitMap = NULL
FloorBitMap = BITMAP(Floor_Width,Floor_Height,Floor_Depth,TRUE)
BITMAP OUTPUT FloorBitMap
FOR _rmj=0 TO Floor_Height-1
    FOR _rmi=0 TO Floor_Width-1
        READ _rma
        Pset(_rmi,_rmj),_rma
    NEXT _rmi
NEXT _rmj
WINDOW OUTPUT 1
DIM CastleMap_Size AS Integer = 260
DIM CastleMap_Width AS Integer = 16
DIM CastleMap_Height AS Integer = 16
DIM CastleMap_TileWidth AS Integer = 16
DIM CastleMap_TileHeight AS Integer = 16
DIM CastleMap_Id AS Integer = 0
RESTORE CastleMapLabel
DIM CastleMap(260) AS Integer
FOR _rmi=0 TO 259
    READ CastleMap(_rmi)
NEXT _rmi
Boyd1PalLabel:
' Amiga QuickBasic Palette,  Size= 48 Colors= 16 Format=1 Percent
DATA 0.00, 0.00, 0.00
DATA 1.00, 0.87, 0.67
DATA 0.80, 0.80, 0.80
DATA 0.33, 0.33, 0.33
DATA 0.67, 0.47, 0.33
DATA 0.33, 0.33, 0.67
DATA 0.33, 0.67, 1.00
DATA 1.00, 0.33, 0.00
DATA 1.00, 0.33, 0.67
DATA 1.00, 0.67, 0.00
DATA 1.00, 0.67, 0.67
DATA 0.27, 0.54, 0.00
DATA 0.00, 0.00, 0.33
DATA 1.00, 0.33, 1.00
DATA 1.00, 1.00, 0.33
DATA 1.00, 1.00, 1.00
Boyd1Label:
' Amiga AQB BitMap Image, Size= 256 Width= 16 Height= 16 Depth= 4
' Boyd1
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04
DATA &H04,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H04,&H01,&H01,&H04,&H01,&H01,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H01,&H00,&H01
DATA &H01,&H01,&H00,&H01,&H01,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H00,&H01,&H01,&H01,&H00,&H01
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H01,&H01,&H01,&H01,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H0B,&H0B,&H00,&H00,&H00,&H00,&H00,&H0B,&H0B,&H00,&H00,&H00,&H00,&H00,&H00,&H01
DATA &H0B,&H00,&H0B,&H0B,&H0B,&H0B,&H0B,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H01,&H01,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H0B,&H0B,&H00,&H0B,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H0B,&H0B,&H00,&H01,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H01,&H01,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
Boyd2Label:
' Amiga AQB BitMap Image, Size= 256 Width= 16 Height= 16 Depth= 4
' Boyd2
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H04,&H04,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04
DATA &H04,&H04,&H04,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H04,&H01,&H01,&H04,&H01,&H01,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H01,&H01,&H00,&H01,&H01,&H01,&H00,&H01,&H01,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H00,&H01
DATA &H01,&H01,&H00,&H01,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H01,&H01,&H01,&H01,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H0B,&H0B,&H00,&H00,&H00,&H00,&H00,&H0B,&H0B,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H0B,&H0B,&H0B,&H0B,&H01,&H01,&H01,&H0B,&H0B,&H0B,&H0B,&H00,&H00,&H00,&H00,&H00,&H0B
DATA &H0B,&H00,&H0B,&H0B,&H0B,&H0B,&H0B,&H00,&H0B,&H0B,&H00,&H00,&H00,&H00,&H00,&H01,&H01,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H01,&H01,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H0B,&H0B,&H0B,&H0B,&H0B,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H0B,&H0B,&H00,&H0B,&H0B,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H01,&H01,&H00,&H01,&H01,&H00,&H00,&H00,&H00,&H00
Boyd3Label:
' Amiga AQB BitMap Image, Size= 256 Width= 16 Height= 16 Depth= 4
' Boyd3
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04
DATA &H04,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H04,&H01,&H01,&H04,&H01,&H01,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H01,&H00,&H01
DATA &H01,&H01,&H00,&H01,&H01,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H00,&H01,&H01,&H01,&H00,&H01
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H01,&H01,&H01,&H01,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H0B,&H0B,&H00,&H00,&H00,&H00,&H00,&H0B,&H0B,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H0B,&H0B,&H0B,&H0B,&H0B,&H00,&H0B,&H01,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H01,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H01,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H0B,&H00,&H0B,&H0B,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H00,&H0B,&H0B,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H01,&H00,&H00,&H00,&H00,&H00
BoyL1Label:
' Amiga AQB BitMap Image, Size= 256 Width= 16 Height= 16 Depth= 4
' BoyL1
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04
DATA &H04,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H04,&H01,&H01,&H04,&H04,&H04,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H00,&H01
DATA &H01,&H04,&H00,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H00,&H01,&H01,&H00,&H01,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H01,&H01,&H01,&H01,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H01,&H01,&H0B,&H00,&H0B,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H00,&H0B,&H0B
DATA &H0B,&H0B,&H00,&H0B,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H0B,&H0B,&H00,&H0B,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H01,&H01,&H00,&H00,&H01,&H01,&H00,&H00,&H00,&H00,&H00
BoyL2Label:
' Amiga AQB BitMap Image, Size= 256 Width= 16 Height= 16 Depth= 4
' BoyL2
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H04,&H04,&H04,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04
DATA &H04,&H04,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H04
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H04,&H01,&H01,&H04,&H04,&H04,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H01,&H00,&H01,&H01,&H04,&H00,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H00,&H01
DATA &H01,&H00,&H01,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H01,&H01,&H01,&H01,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H00,&H0B,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H0B,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01
DATA &H01,&H0B,&H0B,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H0B,&H0B,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H01,&H00,&H00,&H00,&H00,&H00,&H00,&H00
BoyL3Label:
' Amiga AQB BitMap Image, Size= 256 Width= 16 Height= 16 Depth= 4
' BoyL3
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04
DATA &H04,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H04,&H01,&H01,&H04,&H04,&H04,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H00,&H01
DATA &H01,&H04,&H00,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H00,&H01,&H01,&H00,&H01,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H01,&H01,&H01,&H01,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H01,&H01,&H0B,&H00,&H0B,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H0B,&H0B
DATA &H00,&H0B,&H0B,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H01,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H0B,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H01,&H01,&H00,&H00,&H01,&H01,&H00,&H00,&H00,&H00,&H00
BoyR1Label:
' Amiga AQB BitMap Image, Size= 256 Width= 16 Height= 16 Depth= 4
' BoyR1
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04
DATA &H04,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H04,&H04,&H04,&H04,&H01,&H01,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H00,&H04,&H01
DATA &H01,&H00,&H01,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H00,&H01,&H01,&H00,&H01,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H01,&H01,&H01,&H01,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H0B,&H00,&H0B,&H01,&H01,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H0B,&H0B,&H00
DATA &H0B,&H0B,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H01,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H0B,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H01,&H01,&H00,&H00,&H01,&H01,&H00,&H00,&H00,&H00,&H00
BoyR2Label:
' Amiga AQB BitMap Image, Size= 256 Width= 16 Height= 16 Depth= 4
' BoyR2
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H04,&H04,&H04,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04
DATA &H04,&H04,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H04
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H01,&H01,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H04,&H00,&H04,&H01,&H01,&H00,&H01,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H00,&H01
DATA &H01,&H00,&H01,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H01,&H01,&H01,&H01,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H0B,&H00,&H01,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H0B,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H0B,&H0B,&H01
DATA &H01,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H0B,&H0B,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H01,&H00,&H00,&H00,&H00,&H00,&H00,&H00
BoyR3Label:
' Amiga AQB BitMap Image, Size= 256 Width= 16 Height= 16 Depth= 4
' BoyR3
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04
DATA &H04,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H04,&H04,&H04,&H04,&H01,&H01,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H00,&H04,&H01
DATA &H01,&H00,&H01,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H00,&H01,&H01,&H00,&H01,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H01,&H01,&H01,&H01,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H0B,&H00,&H0B,&H01,&H01,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H0B,&H00,&H0B,&H0B
DATA &H0B,&H0B,&H00,&H01,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H0B,&H00,&H0B,&H0B,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H01,&H01,&H00,&H00,&H01,&H01,&H00,&H00,&H00,&H00,&H00
BoyU1Label:
' Amiga AQB BitMap Image, Size= 256 Width= 16 Height= 16 Depth= 4
' BoyU1
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04
DATA &H04,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H04,&H04,&H04
DATA &H04,&H04,&H04,&H04,&H01,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H01,&H01,&H01,&H01,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H0B,&H00,&H00,&H00,&H00,&H00,&H00,&H0B,&H0B,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H0B,&H0B,&H0B,&H0B,&H0B,&H00,&H0B,&H01,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H01,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H0B,&H0B,&H00,&H0B,&H0B,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H00,&H0B,&H0B,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H01,&H00,&H00,&H00,&H00,&H00
BoyU2Label:
' Amiga AQB BitMap Image, Size= 256 Width= 16 Height= 16 Depth= 4
' BoyU2
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H04,&H04,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04
DATA &H04,&H04,&H04,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H01,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H01,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04
DATA &H04,&H04,&H04,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H01,&H01,&H01,&H01,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H0B,&H0B,&H00,&H00,&H00,&H00,&H00,&H0B,&H0B,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H0B,&H0B,&H0B,&H0B,&H0B,&H0B,&H0B,&H0B,&H0B,&H0B,&H0B,&H00,&H00,&H00,&H00,&H00,&H0B
DATA &H0B,&H00,&H0B,&H0B,&H0B,&H0B,&H0B,&H00,&H0B,&H0B,&H00,&H00,&H00,&H00,&H00,&H01,&H01,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H01,&H01,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H0B,&H0B,&H0B,&H0B,&H0B,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H0B,&H0B,&H00,&H0B,&H0B,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H01,&H01,&H00,&H01,&H01,&H00,&H00,&H00,&H00,&H00
BoyU3Label:
' Amiga AQB BitMap Image, Size= 256 Width= 16 Height= 16 Depth= 4
' BoyU3
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04
DATA &H04,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H04,&H04,&H04
DATA &H04,&H04,&H04,&H04,&H01,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H04,&H04,&H04,&H04,&H04,&H04,&H04
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H01,&H01,&H01,&H01,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H0B,&H0B,&H00,&H00,&H00,&H00,&H00,&H00,&H0B,&H00,&H00,&H00,&H00,&H00,&H00,&H01
DATA &H0B,&H00,&H0B,&H0B,&H0B,&H0B,&H0B,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H01,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H01,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H0B,&H0B,&H00,&H0B,&H0B,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H0B,&H0B,&H00,&H01,&H00,&H00,&H00,&H00,&H00,&H00
DATA &H00,&H00,&H00,&H00,&H00,&H00,&H01,&H01,&H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
BricksLabel:
' Amiga AQB BitMap Image, Size= 256 Width= 16 Height= 16 Depth= 4
' Bricks
DATA &H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H02,&H02,&H02,&H02
DATA &H02,&H02,&H03,&H02,&H0F,&H0F,&H0F,&H0F,&H02,&H03,&H02,&H02,&H02,&H02,&H02,&H02,&H02,&H02,&H03,&H02
DATA &H02,&H02,&H02,&H02,&H02,&H03,&H02,&H02,&H02,&H02,&H02,&H02,&H02,&H02,&H03,&H02,&H02,&H02,&H02,&H02
DATA &H02,&H03,&H02,&H02,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03
DATA &H0F,&H0F,&H02,&H03,&H02,&H02,&H02,&H02,&H02,&H02,&H03,&H02,&H0F,&H0F,&H0F,&H0F,&H02,&H02,&H02,&H03
DATA &H02,&H02,&H02,&H02,&H02,&H02,&H03,&H02,&H02,&H02,&H02,&H02,&H02,&H02,&H02,&H03,&H02,&H02,&H02,&H02
DATA &H02,&H02,&H03,&H02,&H02,&H02,&H02,&H02,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03
DATA &H03,&H03,&H03,&H03,&H02,&H02,&H02,&H02,&H02,&H02,&H03,&H02,&H0F,&H0F,&H0F,&H0F,&H02,&H03,&H02,&H02
DATA &H02,&H02,&H02,&H02,&H02,&H02,&H03,&H02,&H02,&H02,&H02,&H02,&H02,&H03,&H02,&H02,&H02,&H02,&H02,&H02
DATA &H02,&H02,&H03,&H02,&H02,&H02,&H02,&H02,&H02,&H03,&H02,&H02,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03
DATA &H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H0F,&H0F,&H02,&H03,&H02,&H02,&H02,&H02,&H02,&H02,&H03,&H02
DATA &H0F,&H0F,&H0F,&H0F,&H02,&H02,&H02,&H03,&H02,&H02,&H02,&H02,&H02,&H02,&H03,&H02,&H02,&H02,&H02,&H02
DATA &H02,&H02,&H02,&H03,&H02,&H02,&H02,&H02,&H02,&H02,&H03,&H02,&H02,&H02,&H02,&H02
FloorLabel:
' Amiga AQB BitMap Image, Size= 256 Width= 16 Height= 16 Depth= 4
' Floor
DATA &H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03
DATA &H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03
DATA &H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03
DATA &H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03
DATA &H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03
DATA &H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03
DATA &H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03
DATA &H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03
DATA &H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03
DATA &H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03
DATA &H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03
DATA &H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03
DATA &H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03,&H03
CastleMapLabel:
' Basic Map Code Created By Raster Master
' Size =260 Width=16 Height=16 Tile Width=16 Tile Height=16
' Castle
DATA 16,16,16,16,14,14,14,14,14,14
DATA 14,14,14,14,14,14,14,14,14,14
DATA 14,13,13,13,13,14,13,13,13,13
DATA 13,13,14,14,14,14,14,13,14,14
DATA 14,14,14,14,14,14,14,13,14,14
DATA 14,14,14,13,14,14,14,14,14,14
DATA 14,14,14,13,13,14,14,14,14,13
DATA 14,14,14,14,14,14,14,14,14,14
DATA 13,14,14,14,14,13,14,14,14,14
DATA 14,14,14,14,14,13,13,14,14,14
DATA 14,13,14,14,14,14,14,14,14,14
DATA 14,13,14,14,14,14,14,13,14,14
DATA 14,14,14,14,14,14,14,13,14,14
DATA 14,14,14,13,13,13,13,13,13,13
DATA 14,14,14,13,14,14,14,14,14,14
DATA 14,14,14,14,14,14,14,14,14,14
DATA 14,14,14,14,14,14,14,14,14,14
DATA 14,14,14,14,14,14,14,14,14,14
DATA 14,14,14,14,14,14,14,14,14,14
DATA 14,14,14,14,14,14,14,14,14,14
DATA 14,14,14,14,14,14,14,14,14,14
DATA 14,14,14,14,14,14,14,14,14,14
DATA 14,14,14,14,14,14,14,14,14,14
DATA 14,14,14,14,14,14,14,14,14,14
DATA 14,14,14,14,14,14,14,14,14,14
DATA 14,14,14,14,14,14,14,14,14,14


'main loop: bob animation, event handling happens during VWAIT
SUB doQuit
    SYSTEM
END SUB

ON MOUSE CALL doQuit
MOUSE ON


DIM x,y,i,j,ipos,Play,di,count AS integer
DIM AS BOB_t PTR Boy(4,3)
DIM k$

'read palette
FOR i=0 TO Boyd1Pal_Size/3-1
    palette i,Boyd1Pal!(i*3),Boyd1Pal!(i*3+1),Boyd1Pal!(i*3+2)
NEXT i

ipos=4
FOR j=0 TO CastleMap_Height-1
    FOR i=0 TO CastleMap_Width-1
        IF CastleMap(ipos) = Bricks_Id THEN put(i*16,j*16),BricksBitMap
        IF CastleMap(ipos) = Floor_Id THEN put(i*16,j*16),FloorBitMap
        ipos=ipos+1
    NEXT i
NEXT j

count=0
x=100
y=100
Play=1
di=0

DIM boyup AS integer = 0
DIM boydown AS integer = 1
DIM boyleft AS integer = 2
DIM boyright AS integer = 3
DIM dir AS integer 

'register all the boy Bob's  in a 2d array for easy management
boy(boyup,0)=BoyU1Bob
boy(boyup,1)=BoyU2Bob
boy(boyup,2)=BoyU3Bob

boy(boydown,0)=Boyd1Bob
boy(boydown,1)=Boyd2Bob
boy(boydown,2)=Boyd3Bob

boy(boyleft,0)=BoyL1Bob
boy(boyleft,1)=BoyL2Bob
boy(boyleft,2)=BoyL3Bob

boy(boyright,0)=BoyR1Bob
boy(boyright,1)=BoyR2Bob
boy(boyright,2)=BoyR3Bob

dir=boyright

BOB MOVE Boy(dir,count), (x, y)
BOB SHOW Boy(dir,count)

WHILE Play=1
    VWAIT
    di=0
    k$=inkey$
    IF k$<>"" THEN di=asc(k$)
    IF k$ = "s" OR di=30 THEN x=x+4:GOSUB goright
    IF k$ = "a" OR di=31 THEN x=x-4:GOSUB goleft
    IF k$ = "w" OR di=28 THEN y=y-4:GOSUB goup
    IF k$ = "z" OR di=29 THEN y=y+4:GOSUB godown
    IF k$ = "q" THEN Play=0
    BOB MOVE Boy(dir,count), (x, y)
    
    GELS REPAINT    
WEND

godown:
BOB HIDE Boy(dir,count)
count=count+1
IF count > 2 THEN count=0
dir=boydown
BOB SHOW Boy(dir,count)
RETURN 

goleft:
BOB HIDE Boy(dir,count)
count=count+1
IF count > 2 THEN count=0
dir=boyleft
BOB SHOW Boy(dir,count)
RETURN

goright:
BOB HIDE Boy(dir,count)
count=count+1
IF count > 2 THEN count=0
dir=boyright
BOB SHOW Boy(dir,count)
RETURN

goup:
BOB HIDE Boy(dir,count)
count=count+1
IF count > 2 THEN count=0
dir=boyup
BOB SHOW Boy(dir,count)
RETURN 

